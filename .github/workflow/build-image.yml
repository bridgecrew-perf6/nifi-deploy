name: Build NiFi images
on:
  workflow_dispatch:
    inputs:
      image_name:
        type: choice
        description: 'Name of the Docker Image to build'
        options:
        - nifi
        - nifi-ca
        - nifi-registry
        required: true
      tag:
        description: 'tag (example: {stage}-1.7.x)'
        required: true
      
jobs:
  build-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push to Amazon ECR
      working_directory: ${{ github.event.inputs.image_name }}
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: nifi
        IMAGE_TAG: ${{ github.event.inputs.tag }}
      run: |
        docker build --tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
    - name: Logout of Amazon ECR
      if: always()
      run: docker logout ${{ steps.login-ecr.outputs.registry }}
