# user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 768;
}

http {

    # Basic Settings
    client_max_body_size 10M;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    # server_tokens off;

    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging Settings
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Gzip Settings
    gzip on;
    gzip_disable "msie6";

    upstream nifi-cluster {
        hash $remote_addr;
        server nifi-1:8443;
        server nifi-2:8443;
        server nifi-3:8443;
    }

    server {
        listen 80;
        server_name _;

        proxy_set_header X-Real-IP  $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-ProxyScheme http;
        proxy_set_header X-ProxyHost $host;
        proxy_set_header X-ProxyPort 80;

        location /nifi-registry/ {
            proxy_pass http://nifi-registry:18080/nifi-registry/;
        }

        location /nifi-registry-api/ {
            proxy_pass http://nifi-registry:18080/nifi-registry-api/;
        }
    }

    server {
        listen 443 ssl;
        server_name _;

        ssl_certificate /etc/nginx/nginx.crt;
        ssl_certificate_key /etc/nginx/nginx.key;
        ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;

        proxy_set_header X-Real-IP  $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-ProxyScheme https;
        proxy_set_header X-ProxyHost $host;
        proxy_set_header X-ProxyPort 443;

        if ($request_uri = "/nifi") {
        return 301 https://$host$request_uri/;
        }

        location / {
            proxy_pass https://nifi-cluster/;
        }
    }
}